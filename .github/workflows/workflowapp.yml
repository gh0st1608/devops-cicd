name: workflowapp

on:
  push:
    branches: [develop] #deploy-stack1
  workflow_run:
    workflows: ["workflowinfra"]
    types:
      - completed  # Se activará cuando el primer workflow haya terminado

permissions:
  contents: read
  actions: read
  #artifacts: read

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Log in to AWS ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build and push Docker image
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ECR_REPOSITORY_NAME: ${{ secrets.AWS_ECR_REPOSITORY_NAME }}
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        cd project
        docker-compose build
        echo "ECR Repository Name: $AWS_ECR_REPOSITORY_NAME"
        docker tag django_vaddy:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR_REPOSITORY_NAME:latest
        docker tag web_vaddy:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR_REPOSITORY_NAME:latest
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR_REPOSITORY_NAME:latest
      
  deploy-containers:
    runs-on: ubuntu-latest
    needs: build-images

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #- name: Download Elastic IP Artifact
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: elastic-ip
      #    path: project/eip.txt

      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ECR_REPOSITORY_NAME: ${{ secrets.AWS_ECR_REPOSITORY_NAME }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        run: |
          #Leer IP
          #IP=$(cat eip.txt)
          cd project
          IP="18.205.15.29"
          echo "${IP}"
          # Descargar archivo
          echo "$AWS_SSH_PRIVATE_KEY" > "$(pwd)/deploy.pem"
          chmod 600 "$(pwd)/deploy.pem"
          # Conectar a la instancia EC2 y ejecutar comandos
          ssh -o StrictHostKeyChecking=no -i deploy.pem ubuntu@"$IP" << "EOF"
            echo "$(pwd)"
            echo "AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID"
            echo "AWS_REGION: $AWS_REGION"
            echo "AWS_ECR_REPOSITORY_NAME: $AWS_ECR_REPOSITORY_NAME"
            sudo apt-get update
            sudo apt-get install -y docker-compose
            # Pull de la última imagen desde ECR
            docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_ECR_REPOSITORY_NAME:latest
            # Ejecutar el contenedor
            docker-compose up -d
          EOF